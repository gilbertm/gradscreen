


<hr />
<div class="test">
    var TelepromptGraduate = React.createClass({
    getInitialState: function() {
    return { graduate: 0 };
    },

    componentDidMount: function() {
    this.getGraduate();
    // setInterval(this.loadFromServer, 2000);
    },

    /* getGraduate: function() {
    return this.state.graduate;
    },

    loadFromServer: function() {
    var _this = this;
    $.ajax({
    url: '/api/graduate',
    dataType: 'json',
    cache: false,
    success: function(g) {
    this.setState({graduate: 2});
    }.bind(this),
    error: function(xhr, status, err) {
    console.error('/api/graduate', status, err.toString());
    }.bind(this)
    });
    }, */

    render: function() {
    return
    <div>
        <h1>Test</h1>
    </div>;
    }
    });
</div>



// Reduces the size of text in the element to fit the parent.
              $.fn.reduceTextSize = function(options) {
                options = $.extend({
                  minFontSize: 10
                }, options);

                function checkWidth(em) {
                  var $em = $(em);
                  var oldPosition = $em.css('position');
                  $em.css('position', 'absolute');
                  var width = $em.width();
                  $em.css('position', oldPosition);
                  return width;
                }

                return this.each(function(){
                  var $this = $(this);
                  var $parent = $this.parent();
                  var prevFontSize;
                  console.log("cw" + checkWidth($this));
                    console.log("pw" + $parent.width());
                  while (checkWidth($this) > $parent.width()) {
                    var currentFontSize = parseInt($this.css('font-size').replace('px', ''));
                    // Stop looping if min font size reached, or font size did not change last iteration.
                    if (isNaN(currentFontSize) || currentFontSize <= options.minFontSize ||
                        prevFontSize && prevFontSize == currentFontSize) {
                      break;
                    }
                    prevFontSize = currentFontSize;
                    $this.css('font-size', (currentFontSize - 1) + 'px');
                  }
                });

              };

                $("#englishFullname").reduceTextSize();
